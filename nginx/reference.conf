##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	server_name lytics.ca www.lytics.ca;
#	root /home/pearse/code/lytics/frontend/build;

    	if ($host = www.lytics.ca) {
        	return 301 https://lytics.ca$request_uri;
    	}

	location =/favicon.ico { access_log off; log_not_found off; }
	location / {
		root /home/pearse/code/lytics/frontend/build;
	}
	
	
	location ~ ^/(api|admin)/{
		include proxy_params;
		proxy_pass http://unix:/home/pearse/code/lytics/lytics.sock;
	}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/lytics.ca/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lytics.ca/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = www.lytics.ca) {
        return 301 https://lytics.ca$request_uri;
    } # managed by Certbot


    if ($host = lytics.ca) {
        return 301 https://lytics.ca$request_uri;
    } # managed by Certbot


	listen 80;
	server_name lytics.ca www.lytics.ca;
	return 404; # managed by Certbot
}
