

upstream djangoreactproject {
    server web:8000;
}

server {
    listen 80;
    listen [::]:80;

	server_name lytics.ca www.lytics.ca;

    location ~ /.well-known/acme-challenge/ {
        allow all;
        root /var/www/certbot;
    }

    location / {
        return 301 https://lytics.ca$request_uri;
    }
}

server {

        listen 443 ssl http2;
        listen [::]:443 ssl http2;
	    server_name lytics.ca www.lytics.ca;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/lytics.ca/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/lytics.ca/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
        
        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;


        if ($host = www.lytics.ca) {
            return 301 https://lytics.ca$request_uri;
        }

        location =/favicon.ico { access_log off; log_not_found off; }
	
        location / {
            root /frontend/build;
        }

        location ~ ^/(api|admin)/{
            # proxy_set_header Host $http_host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass http://djangoreactproject;

            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        }
    }


# server {
# 	server_name lytics.ca www.lytics.ca;
# #	root /home/pearse/code/lytics/frontend/build;

#     	if ($host = www.lytics.ca) {
#         	return 301 https://lytics.ca$request_uri;
#     	}

# 	location =/favicon.ico { access_log off; log_not_found off; }
# 	location / {
# 		root /home/pearse/code/lytics/frontend/build;
# 	}
	
	
# 	location ~ ^/(api|admin)/{
# 		include proxy_params;
# 		proxy_pass http://unix:/home/pearse/code/lytics/lytics.sock;
# 	}

#     listen 443 ssl; # managed by Certbot
#     ssl_certificate /etc/letsencrypt/live/lytics.ca/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/lytics.ca/privkey.pem; # managed by Certbot
#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

# }
